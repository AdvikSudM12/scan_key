#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤ GitHub API
"""

import os
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å —Å–∫–∞–Ω–µ—Ä–∞
from enhanced_scanner import EnhancedMultiProviderGitHubScanner

def test_rate_limits():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤ GitHub API
    """
    print("üß™ –¢–ï–°–¢ –ü–†–û–í–ï–†–ö–ò –õ–ò–ú–ò–¢–û–í GITHUB API")
    print("="*60)
    
    github_token = os.getenv('GITHUB_TOKEN')
    print(f"üîë GitHub —Ç–æ–∫–µ–Ω: {'‚úÖ –ù–∞–π–¥–µ–Ω' if github_token else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∫–∞–Ω–µ—Ä–∞
    scanner = EnhancedMultiProviderGitHubScanner(github_token)
    
    print(f"\nüìä –¢–ï–°–¢ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ API")
    print("-" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤
    limits = scanner.check_rate_limits()
    
    if limits['status'] == 'success':
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –ª–∏–º–∏—Ç—ã:")
        print(f"   üîé Search API: {limits['search']['remaining']}/{limits['search']['limit']}")
        print(f"   üåê Core API: {limits['core']['remaining']}/{limits['core']['limit']}")
        
        if limits['search']['reset_datetime']:
            print(f"   ‚è∞ Search —Å–±—Ä–æ—Å: {limits['search']['reset_datetime'].strftime('%H:%M:%S')}")
        if limits['core']['reset_datetime']:
            print(f"   ‚è∞ Core —Å–±—Ä–æ—Å: {limits['core']['reset_datetime'].strftime('%H:%M:%S')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤: {limits.get('error')}")
    
    print(f"\nüìä –¢–ï–°–¢ 2: –í—ã–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤")
    print("-" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤
    scanner.print_rate_limits()
    
    print(f"\nüìä –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("-" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
    can_continue = scanner.should_continue_scanning()
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å' if can_continue else '‚ùå –ù—É–∂–Ω–æ –∂–¥–∞—Ç—å'}")
    
    print(f"\nüìä –¢–ï–°–¢ 4: –†–∞—Å—á–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API")
    print("-" * 50)
    
    if limits['status'] == 'success':
        search_used = limits['search']['limit'] - limits['search']['remaining']
        core_used = limits['core']['limit'] - limits['core']['remaining']
        
        search_percent = (search_used / limits['search']['limit']) * 100 if limits['search']['limit'] > 0 else 0
        core_percent = (core_used / limits['core']['limit']) * 100 if limits['core']['limit'] > 0 else 0
        
        print(f"üîé Search API –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {search_used} ({search_percent:.1f}%)")
        print(f"üåê Core API –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {core_used} ({core_percent:.1f}%)")
        
        # –û—Ü–µ–Ω–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        queries_count = len(scanner.get_search_queries())
        max_pages = 3
        estimated_search_requests = queries_count * max_pages  # Search API
        
        # –û—Ü–µ–Ω–∫–∞ Core API –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤)
        # –ü—Ä–∏–º–µ—Ä–Ω–æ 10-50 —Ñ–∞–π–ª–æ–≤ –Ω–∞ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        avg_files_per_query = 25
        estimated_files = queries_count * avg_files_per_query
        estimated_core_requests = estimated_files  # Core API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤
        
        print(f"\nüìà –û–¶–ï–ù–ö–ê –î–õ–Ø –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø:")
        print(f"   üîç –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (Search API): ~{estimated_search_requests}")
        print(f"   ÔøΩ –û–∂–∏–¥–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ~{estimated_files}")
        print(f"   ÔøΩüìä –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ (Core API): ~{estimated_core_requests}")
        print(f"   üìä –î–æ—Å—Ç—É–ø–Ω–æ Search API –∑–∞–ø—Ä–æ—Å–æ–≤: {limits['search']['remaining']}")
        print(f"   üìä –î–æ—Å—Ç—É–ø–Ω–æ Core API –∑–∞–ø—Ä–æ—Å–æ–≤: {limits['core']['remaining']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è Search API
        if limits['search']['remaining'] >= estimated_search_requests:
            print(f"   ‚úÖ Search API: –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞")
        else:
            possible_search_queries = limits['search']['remaining'] // max_pages
            print(f"   ‚ö†Ô∏è  Search API: –•–≤–∞—Ç–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ ~{possible_search_queries} –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è Core API
        if limits['core']['remaining'] >= estimated_core_requests:
            print(f"   ‚úÖ Core API: –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤")
        else:
            possible_files = limits['core']['remaining']
            print(f"   ‚ö†Ô∏è  Core API: –•–≤–∞—Ç–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ ~{possible_files} —Ñ–∞–π–ª–æ–≤")
            
        # –û–±—â–∏–π –≤—ã–≤–æ–¥
        bottleneck = None
        if limits['search']['remaining'] < estimated_search_requests:
            bottleneck = f"Search API ({limits['search']['remaining']} –∏–∑ {estimated_search_requests})"
        elif limits['core']['remaining'] < estimated_core_requests:
            bottleneck = f"Core API ({limits['core']['remaining']} –∏–∑ {estimated_core_requests})"
            
        if bottleneck:
            print(f"   üõë –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï: {bottleneck}")
        else:
            print(f"   ‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    print(f"\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")

if __name__ == "__main__":
    test_rate_limits()
